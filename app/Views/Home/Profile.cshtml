@{
    Layout="_DashboardLayout";
}

<div id="app" v-cloak v-if="pdata">

    <div class="row">
        @* <div class="col-md-12" >
            <div class="card" >
                <div class="card-body">
                    
                    <h2>Bookings <span class="badge badge-info float-right">{{(Bookings.length==0)?"No":Bookings.length}}  Booking(s)</span></h2>
                   
                   
                </div>
            </div>
        </div> *@
        <div class="col-md-4">
            <div class="card" v-if="pdata && isProvider">

                <div  class="card-body">
                    <div class="alert alert-danger">
                        <p>Complete Profile</p>
                    </div>
                    Select Multiple Services
                    <ul class="list-group"  v-for="a in Services">
                        <li class="list-group list-group-heading">
                            <h3>{{a.category_name}}</h3></li>
                        <li class="list-group list-group-item"  v-for="a1 in a.services" >
                            <input type="checkbox" v-bind:value="a1.service_id" @@click="AddRmService(a1.service_id)"   v-bind:checked="selected(a1.service_id)">
                                {{a1.servicesubcategory}}
                        
                            </li>
                   </ul>
                    <div class="mt-1">

                    </div>
                    <button class="btn btn-success"  @@click="saveData()">Complete</button>

                </div>




            </div>
        </div>
    </div>
    
    
</div>


@section scripts {
    <style>
        select[multiple]{
            min-height:400px;
        }
    </style>
<script>
var app = new Vue({
    el:"#app",
    data:{
        token :null,
        pdata:null,
        data:null,
        Services:[],
        selectedService:[]
    },
    mounted() {
    this.pdata = JSON.parse(localStorage.getItem("data"))
    var token = localStorage.getItem("token");
    if(token==null || token==undefined){
        window.location.href='/Account/Login'
    }
    this.token= token;
    axios.get("/api/services/AllServices").then(data => {
        if (data.data.status == 0) {
            this.Services = data.data.payload;
        } else {
            alert(data.data.message)
        }
    });
   axios.get("/api/Provider/Services",{ headers: { 'Authorization': this.token } }).then(data => {
        if (data.data.status == 0) {
            this.selectedService= data.data.payload.map(i=> i.serviceId);
        } else {
            alert(data.data.message)
        }
    });
},
computed:{
    isConsumer(){
        return this.pdata.type==0
    },
    isProvider(){
         return this.pdata.type==1
    }
},
methods:{
    AddRmService(id){
            if(this.selectedService.filter(i=>i==id).length>0){
                var index = this.selectedService.indexOf(Id);
                if(index!=-1){
                    this.selectedService.splice(index,1)
                }
            }else{
                this.selectedService.push(id)
            }
    },
    saveData(){
            var data = JSON.parse(JSON.stringify(this.selectedService));
            axios.post('/api/Provider/AddServices',data,{ headers: { 'Authorization': this.token } }).then(data=>{
                alert(data.data)
            })

    },
    selected(id){
        return this.selectedService.filter(i=>i==id).length>0;
    },
loadData(){
        if(this.isProvider){

        }
        if(this.isConsumer){

        }
        if(this.pdata.profile_complete==false){

        }
},
gravtar(email){
    return "https://www.gravatar.com/avatar/"+MD5(email)
}

},
filters: {
    date: function (str) {
        if (!str) { return '(n/a)'; }
        str = new Date(str);
        return ((str.getDate() < 10) ? '0' : '') + str.getDate() + '-' + ((str.getMonth() < 9) ? '0' : '') + (str.getMonth() + 1) + '-' + str.getFullYear()
            ;
    }
}

})



</script>








}





