#pragma checksum "D:\Personal\services_websit\app\Views\Home\Profile.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8914879382066bbbc35974c22f96b153a5bd1582"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Profile), @"mvc.1.0.view", @"/Views/Home/Profile.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Personal\services_websit\app\Views\_ViewImports.cshtml"
using app;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Personal\services_websit\app\Views\_ViewImports.cshtml"
using app.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8914879382066bbbc35974c22f96b153a5bd1582", @"/Views/Home/Profile.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"35d7228549089a448a9c85c9fd74602bc83b83a3", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Profile : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Personal\services_websit\app\Views\Home\Profile.cshtml"
  
    Layout="_DashboardLayout";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div id=""app"" v-cloak v-if=""pdata"">

    <div class=""row"">
        <div class=""col-md-12"" >
            <div class=""card"" >
                <div class=""card-body"">
                    <h2>Bookings <span class=""badge badge-info float-right"">{{(Bookings.length==0)?""No"":Bookings.length}}  Booking(s)</span></h2>
                   
                    <ul class=""list-group"" >
                        <li v-for=""i in Bookings"" class=""list-group-item"">
                        <div class=row>
                                <div class=""col-md-6"" v-if=""isProvider"">
                                    <div class=""row"">
                                        <div class=""col-md-4"">
                                            <span class=""avatar avatar-sm rounded-circle"">
                                                <img v-bind:src=""gravtar(i.consumerEmail)"" class=""img img-avatar""> 
                                            </span>
                                        </div>
                  ");
            WriteLiteral(@"                      <div class=""col-md-8"">{{i.consumerName}}</div>
                                        <b-form-rating v-model=""i.consumerrating"" inline readonly></b-form-rating>
                                    </div>

                                   
                                      
                                   
                                </div>
                                <div class=""col-md-6"" v-if=""isConsumer"">
                                    <div class=""col-md-4"">
                                            <span class=""avatar avatar-sm rounded-circle"">
                                                <img v-bind:src=""gravtar(i.providerEmail)"" class=""img img-avatar""> 
                                            </span>
                                        </div>
                                        <div class=""col-md-8"">{{i.providerName}}</div>
                                        <b-form-rating v-model=""i.providerrating"" inline readonly></b-form");
            WriteLiteral(@"-rating>
                                 
                                    </div>
                                <div class=""col-md-6"">
                                    Service : {{i.serviceName}},
                                    <p>Instructions : {{i.instruction}}</p>
                                    <span class=""badge badge-warning"">On Date : {{i.onDate | date}}</span>
                                    <span class=""badge badge-success"" v-if=""i.complete"">Completed</span>
                                     <span class=""badge badge-danger"" v-if=""!i.complete"">Pending</span>
                                </div>
                                
                        </div>
                        
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class=""col-md-4"">
            <div class=""card"" v-if=""pdata && isProvider"">

                <div v-if=""pdata.profile_complete==false"" class=""card-body");
            WriteLiteral(@""">
                    <div class=""alert alert-danger"">
                        <p>Complete Profile</p>
                    </div>
                    Select Multiple Services
                    <ul class=""list-group""  v-for=""a in Services"">
                        <li class=""list-group list-group-heading"">
                            <h3>{{a.category_name}}</h3></li>
                        <li class=""list-group list-group-item""  v-for=""a1 in a.services"" >
                            <input type=""checkbox"" v-bind:value=""a1.service_id"" >
                                {{a1.servicesubcategory}}
                        
                            </li>
                   </ul>
                    <div class=""mt-1"">

                    </div>
                    <button class=""btn btn-success"">Complete</button>

                </div>




            </div>
        </div>
    </div>
    
    
</div>


");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <style>
        select[multiple]{
            min-height:400px;
        }
    </style>
<script>
var app = new Vue({
el:""#app"",
data:{
    token :null,
    pdata:null,
    data:null,
    Services: [],
    SelectService: [],
    Bookings:[]
},
    mounted() {
    this.pdata = JSON.parse(localStorage.getItem(""data""))
    var token = localStorage.getItem(""token"");
    if(token==null || token==undefined){
        window.location.href='/Account/Login'
    }
    this.token= token;
    axios.get(""/api/services/AllServices"").then(data => {
        if (data.data.status == 0) {
            this.Services = data.data.payload;
        } else {
            alert(data.data.message)
        }
    })
    axios.get(""/api/booking/ListAll?page=0&size=20"", { headers: { 'Authorization': this.token } }).then(data => {
        if (data.data.status == 0) {
            this.Bookings = data.data.payload
        } else {
            alert(data.data.message)
        }
    })
},
computed:{
    i");
                WriteLiteral(@"sConsumer(){
        return this.pdata.type==0
    },
    isProvider(){
         return this.pdata.type==1
    }
},
methods:{
        loadData(){
                if(this.isProvider){

                }
                if(this.isConsumer){

                }
                if(this.pdata.profile_complete==false){

                }
        },
        gravtar(email){
         return ""https://www.gravatar.com/avatar/""+MD5(email)
        }



},
filters: {
    date: function (str) {
        if (!str) { return '(n/a)'; }
        str = new Date(str);
        return ((str.getDate() < 10) ? '0' : '') + str.getDate() + '-' + ((str.getMonth() < 9) ? '0' : '') + (str.getMonth() + 1) + '-' + str.getFullYear()
            ;
    }
}

})



</script>








");
            }
            );
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
